<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Book extends \AppBundle\Entity\Book implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['coverPicture' => NULL, 'summary' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->coverPicture, $this->summary);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'isbn', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'subTitle', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'author', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'editor', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'quantity', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'edition', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'pklibCode', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'ean', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'format', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'volume', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'color', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'cdNumber', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'numberOfPages', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'yearPublished', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'dateAcquired', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'acquisition', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'language', 'coverPicture', 'summary', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'state', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'location', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'booksAvailable', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'subCategories', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'book_user'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'isbn', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'subTitle', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'author', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'editor', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'quantity', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'edition', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'pklibCode', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'ean', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'format', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'volume', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'color', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'cdNumber', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'numberOfPages', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'yearPublished', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'dateAcquired', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'acquisition', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'language', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'state', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'location', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'booksAvailable', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'subCategories', '' . "\0" . 'AppBundle\\Entity\\Book' . "\0" . 'book_user'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Book $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->coverPicture, $this->summary);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setIsbn($isbn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn', [$isbn]);

        return parent::setIsbn($isbn);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn', []);

        return parent::getIsbn();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubTitle($subTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubTitle', [$subTitle]);

        return parent::setSubTitle($subTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubTitle', []);

        return parent::getSubTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor($author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditor($editor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditor', [$editor]);

        return parent::setEditor($editor);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditor', []);

        return parent::getEditor();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setEdition($edition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEdition', [$edition]);

        return parent::setEdition($edition);
    }

    /**
     * {@inheritDoc}
     */
    public function getEdition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEdition', []);

        return parent::getEdition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPklibCode($pklibCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPklibCode', [$pklibCode]);

        return parent::setPklibCode($pklibCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getPklibCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPklibCode', []);

        return parent::getPklibCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setEan($ean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEan', [$ean]);

        return parent::setEan($ean);
    }

    /**
     * {@inheritDoc}
     */
    public function getEan()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEan', []);

        return parent::getEan();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormat($format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormat', [$format]);

        return parent::setFormat($format);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormat', []);

        return parent::getFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function setVolume($volume)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVolume', [$volume]);

        return parent::setVolume($volume);
    }

    /**
     * {@inheritDoc}
     */
    public function getVolume()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVolume', []);

        return parent::getVolume();
    }

    /**
     * {@inheritDoc}
     */
    public function setColor($color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColor', [$color]);

        return parent::setColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function getColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColor', []);

        return parent::getColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setCdNumber($cdNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCdNumber', [$cdNumber]);

        return parent::setCdNumber($cdNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getCdNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCdNumber', []);

        return parent::getCdNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumberOfPages($numberOfPages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumberOfPages', [$numberOfPages]);

        return parent::setNumberOfPages($numberOfPages);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumberOfPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumberOfPages', []);

        return parent::getNumberOfPages();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearPublished($yearPublished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearPublished', [$yearPublished]);

        return parent::setYearPublished($yearPublished);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearPublished', []);

        return parent::getYearPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAcquired($dateAcquired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAcquired', [$dateAcquired]);

        return parent::setDateAcquired($dateAcquired);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAcquired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAcquired', []);

        return parent::getDateAcquired();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcquisition($acquisition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcquisition', [$acquisition]);

        return parent::setAcquisition($acquisition);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcquisition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcquisition', []);

        return parent::getAcquisition();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', [$location]);

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverPicture($coverPicture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverPicture', [$coverPicture]);

        return parent::setCoverPicture($coverPicture);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverPicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverPicture', []);

        return parent::getCoverPicture();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSummary($summary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSummary', [$summary]);

        return parent::setSummary($summary);
    }

    /**
     * {@inheritDoc}
     */
    public function getSummary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSummary', []);

        return parent::getSummary();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubCategory(\AppBundle\Entity\SubCategory $subCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubCategory', [$subCategory]);

        return parent::addSubCategory($subCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubCategory(\AppBundle\Entity\SubCategory $subCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubCategory', [$subCategory]);

        return parent::removeSubCategory($subCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubCategories', []);

        return parent::getSubCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setBooksAvailable($booksAvailable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBooksAvailable', [$booksAvailable]);

        return parent::setBooksAvailable($booksAvailable);
    }

    /**
     * {@inheritDoc}
     */
    public function getBooksAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBooksAvailable', []);

        return parent::getBooksAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function addBookUser(\AppBundle\Entity\Book_User $bookUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBookUser', [$bookUser]);

        return parent::addBookUser($bookUser);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBookUser(\AppBundle\Entity\Book_User $bookUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBookUser', [$bookUser]);

        return parent::removeBookUser($bookUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookUser', []);

        return parent::getBookUser();
    }

}
